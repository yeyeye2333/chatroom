// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chatroom.proto

#include "chatroom.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace chatroom {

inline constexpr Strs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : str_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Strs::Strs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StrsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrsDefaultTypeInternal() {}
  union {
    Strs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrsDefaultTypeInternal _Strs_default_instance_;

inline constexpr Signup_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Signup_info::Signup_info(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Signup_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Signup_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Signup_infoDefaultTypeInternal() {}
  union {
    Signup_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Signup_infoDefaultTypeInternal _Signup_info_default_instance_;

inline constexpr Message::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        obj_{},
        _obj_cached_byte_size_{0},
        context_{},
        date_{},
        gid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Message::Message(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MessageDefaultTypeInternal() {}
  union {
    Message _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MessageDefaultTypeInternal _Message_default_instance_;

inline constexpr Login_info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Login_info::Login_info(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Login_infoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Login_infoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Login_infoDefaultTypeInternal() {}
  union {
    Login_info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Login_infoDefaultTypeInternal _Login_info_default_instance_;

inline constexpr IDs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{},
        _id_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR IDs::IDs(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct IDsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IDsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IDsDefaultTypeInternal() {}
  union {
    IDs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IDsDefaultTypeInternal _IDs_default_instance_;

inline constexpr Head::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        is_{false},
        type_{static_cast< ::chatroom::Type >(0)},
        len_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Head::Head(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct HeadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeadDefaultTypeInternal() {}
  union {
    Head _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeadDefaultTypeInternal _Head_default_instance_;

inline constexpr Group_uid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Group_uid::Group_uid(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Group_uidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Group_uidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Group_uidDefaultTypeInternal() {}
  union {
    Group_uid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Group_uidDefaultTypeInternal _Group_uid_default_instance_;

inline constexpr File::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        obj_{},
        _obj_cached_byte_size_{0},
        name_{},
        date_{},
        len_{},
        _len_cached_byte_size_{0},
        gid_{0} {}

template <typename>
PROTOBUF_CONSTEXPR File::File(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileDefaultTypeInternal() {}
  union {
    File _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileDefaultTypeInternal _File_default_instance_;
}  // namespace chatroom
static ::_pb::Metadata file_level_metadata_chatroom_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_chatroom_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_chatroom_2eproto = nullptr;
const ::uint32_t TableStruct_chatroom_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::chatroom::Head, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Head, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::chatroom::Head, _impl_.is_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Head, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Head, _impl_.len_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::chatroom::File, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::chatroom::File, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::chatroom::File, _impl_.obj_),
    PROTOBUF_FIELD_OFFSET(::chatroom::File, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::chatroom::File, _impl_.date_),
    PROTOBUF_FIELD_OFFSET(::chatroom::File, _impl_.len_),
    PROTOBUF_FIELD_OFFSET(::chatroom::File, _impl_.gid_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::chatroom::Message, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Message, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::chatroom::Message, _impl_.obj_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Message, _impl_.context_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Message, _impl_.date_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Message, _impl_.gid_),
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::chatroom::Signup_info, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Signup_info, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::chatroom::Signup_info, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Signup_info, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Signup_info, _impl_.password_),
    2,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::chatroom::Login_info, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Login_info, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::chatroom::Login_info, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Login_info, _impl_.password_),
    1,
    0,
    PROTOBUF_FIELD_OFFSET(::chatroom::Group_uid, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Group_uid, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::chatroom::Group_uid, _impl_.uid_),
    PROTOBUF_FIELD_OFFSET(::chatroom::Group_uid, _impl_.name_),
    1,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::chatroom::IDs, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::chatroom::IDs, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::chatroom::Strs, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::chatroom::Strs, _impl_.str_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::chatroom::Head)},
        {14, 27, -1, sizeof(::chatroom::File)},
        {32, 44, -1, sizeof(::chatroom::Message)},
        {48, 59, -1, sizeof(::chatroom::Signup_info)},
        {62, 72, -1, sizeof(::chatroom::Login_info)},
        {74, 84, -1, sizeof(::chatroom::Group_uid)},
        {86, -1, -1, sizeof(::chatroom::IDs)},
        {95, -1, -1, sizeof(::chatroom::Strs)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::chatroom::_Head_default_instance_._instance,
    &::chatroom::_File_default_instance_._instance,
    &::chatroom::_Message_default_instance_._instance,
    &::chatroom::_Signup_info_default_instance_._instance,
    &::chatroom::_Login_info_default_instance_._instance,
    &::chatroom::_Group_uid_default_instance_._instance,
    &::chatroom::_IDs_default_instance_._instance,
    &::chatroom::_Strs_default_instance_._instance,
};
const char descriptor_table_protodef_chatroom_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\016chatroom.proto\022\010chatroom\"d\n\004Head\022\017\n\002is"
    "\030\001 \001(\010H\000\210\001\001\022!\n\004type\030\002 \001(\0162\016.chatroom.Typ"
    "eH\001\210\001\001\022\020\n\003len\030\003 \001(\005H\002\210\001\001B\005\n\003_isB\007\n\005_type"
    "B\006\n\004_len\"V\n\004File\022\013\n\003obj\030\001 \003(\005\022\014\n\004name\030\002 "
    "\003(\t\022\014\n\004date\030\004 \003(\t\022\013\n\003len\030\005 \003(\003\022\020\n\003gid\030\006 "
    "\001(\005H\000\210\001\001B\006\n\004_gid\"O\n\007Message\022\013\n\003obj\030\001 \003(\005"
    "\022\017\n\007context\030\002 \003(\t\022\014\n\004date\030\003 \003(\t\022\020\n\003gid\030\004"
    " \001(\005H\000\210\001\001B\006\n\004_gid\"g\n\013Signup_info\022\020\n\003uid\030"
    "\001 \001(\005H\000\210\001\001\022\021\n\004name\030\002 \001(\tH\001\210\001\001\022\025\n\010passwor"
    "d\030\003 \001(\tH\002\210\001\001B\006\n\004_uidB\007\n\005_nameB\013\n\t_passwo"
    "rd\"J\n\nLogin_info\022\020\n\003uid\030\001 \001(\005H\000\210\001\001\022\025\n\010pa"
    "ssword\030\002 \001(\tH\001\210\001\001B\006\n\004_uidB\013\n\t_password\"A"
    "\n\tGroup_uid\022\020\n\003uid\030\001 \001(\005H\000\210\001\001\022\021\n\004name\030\002 "
    "\001(\tH\001\210\001\001B\006\n\004_uidB\007\n\005_name\"\021\n\003IDs\022\n\n\002id\030\001"
    " \003(\005\"\023\n\004Strs\022\013\n\003str\030\001 \003(\t*\344\004\n\004Type\022\013\n\007no"
    "thing\020\000\022\t\n\005login\020\001\022\n\n\006signup\020\002\022\n\n\006logout"
    "\020\003\022\014\n\010u_search\020\004\022\r\n\tu_request\020\005\022\r\n\tu_lis"
    "treq\020\006\022\t\n\005u_add\020\007\022\t\n\005u_del\020\010\022\n\n\006u_blok\020\t"
    "\022\014\n\010u_unblok\020\n\022\r\n\tu_message\020\013\022\n\n\006u_file\020"
    "\014\022\017\n\013u_m_history\020\r\022\020\n\014u_f_history0\020\016\022\020\n\014"
    "u_f_history1\020\017\022\014\n\010g_create\020\020\022\014\n\010g_disban"
    "\020\021\022\r\n\tg_request\020\022\022\r\n\tg_listreq\020\023\022\t\n\005g_ad"
    "d\020\024\022\t\n\005g_del\020\025\022\014\n\010g_search\020\026\022\r\n\tg_messag"
    "e\020\027\022\n\n\006g_file\020\030\022\n\n\006g_quit\020\031\022\r\n\tg_members"
    "\020\032\022\020\n\014g_addmanager\020\033\022\020\n\014g_delmanager\020\034\022\017"
    "\n\013g_m_history\020\035\022\020\n\014g_f_history0\020\036\022\020\n\014g_f"
    "_history1\020\037\022\020\n\014notify_u_req\020 \022\016\n\nnotify_"
    "u_m\020!\022\016\n\nnotify_u_f\020\"\022\020\n\014notify_g_req\020#\022"
    "\016\n\nnotify_g_m\020$\022\016\n\nnotify_g_f\020%\022\r\n\tg_con"
    "firm\020&\022\017\n\013fri_confirm\020\'\022\017\n\013heart_check\020("
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_chatroom_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_chatroom_2eproto = {
    false,
    false,
    1208,
    descriptor_table_protodef_chatroom_2eproto,
    "chatroom.proto",
    &descriptor_table_chatroom_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_chatroom_2eproto::offsets,
    file_level_metadata_chatroom_2eproto,
    file_level_enum_descriptors_chatroom_2eproto,
    file_level_service_descriptors_chatroom_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_chatroom_2eproto_getter() {
  return &descriptor_table_chatroom_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_chatroom_2eproto(&descriptor_table_chatroom_2eproto);
namespace chatroom {
const ::google::protobuf::EnumDescriptor* Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_chatroom_2eproto);
  return file_level_enum_descriptors_chatroom_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Type_internal_data_[] = {
    2686976u, 0u, };
bool Type_IsValid(int value) {
  return 0 <= value && value <= 40;
}
// ===================================================================

class Head::_Internal {
 public:
  using HasBits = decltype(std::declval<Head>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Head, _impl_._has_bits_);
  static void set_has_is(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_len(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Head::Head(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chatroom.Head)
}
Head::Head(
    ::google::protobuf::Arena* arena, const Head& from)
    : Head(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Head::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Head::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_),
           0,
           offsetof(Impl_, len_) -
               offsetof(Impl_, is_) +
               sizeof(Impl_::len_));
}
Head::~Head() {
  // @@protoc_insertion_point(destructor:chatroom.Head)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Head::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Head::Clear() {
// @@protoc_insertion_point(message_clear_start:chatroom.Head)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.is_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.len_) -
        reinterpret_cast<char*>(&_impl_.is_)) + sizeof(_impl_.len_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Head::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Head::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Head, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Head_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool is = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Head, _impl_.is_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Head, _impl_.is_)}},
    // optional .chatroom.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Head, _impl_.type_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Head, _impl_.type_)}},
    // optional int32 len = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Head, _impl_.len_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Head, _impl_.len_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool is = 1;
    {PROTOBUF_FIELD_OFFSET(Head, _impl_.is_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .chatroom.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(Head, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional int32 len = 3;
    {PROTOBUF_FIELD_OFFSET(Head, _impl_.len_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Head::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chatroom.Head)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool is = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is(), target);
  }

  // optional .chatroom.Type type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_type(), target);
  }

  // optional int32 len = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chatroom.Head)
  return target;
}

::size_t Head::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chatroom.Head)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool is = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional .chatroom.Type type = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional int32 len = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_len());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Head::_class_data_ = {
    Head::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Head::GetClassData() const {
  return &_class_data_;
}

void Head::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Head*>(&to_msg);
  auto& from = static_cast<const Head&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chatroom.Head)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.is_ = from._impl_.is_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.len_ = from._impl_.len_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Head::CopyFrom(const Head& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chatroom.Head)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Head::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Head::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Head::InternalSwap(Head* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Head, _impl_.len_)
      + sizeof(Head::_impl_.len_)
      - PROTOBUF_FIELD_OFFSET(Head, _impl_.is_)>(
          reinterpret_cast<char*>(&_impl_.is_),
          reinterpret_cast<char*>(&other->_impl_.is_));
}

::google::protobuf::Metadata Head::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_chatroom_2eproto_getter, &descriptor_table_chatroom_2eproto_once,
      file_level_metadata_chatroom_2eproto[0]);
}
// ===================================================================

class File::_Internal {
 public:
  using HasBits = decltype(std::declval<File>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(File, _impl_._has_bits_);
  static void set_has_gid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

File::File(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chatroom.File)
}
inline PROTOBUF_NDEBUG_INLINE File::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        obj_{visibility, arena, from.obj_},
        _obj_cached_byte_size_{0},
        name_{visibility, arena, from.name_},
        date_{visibility, arena, from.date_},
        len_{visibility, arena, from.len_},
        _len_cached_byte_size_{0} {}

File::File(
    ::google::protobuf::Arena* arena,
    const File& from)
    : ::google::protobuf::Message(arena) {
  File* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.gid_ = from._impl_.gid_;

  // @@protoc_insertion_point(copy_constructor:chatroom.File)
}
inline PROTOBUF_NDEBUG_INLINE File::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        obj_{visibility, arena},
        _obj_cached_byte_size_{0},
        name_{visibility, arena},
        date_{visibility, arena},
        len_{visibility, arena},
        _len_cached_byte_size_{0} {}

inline void File::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gid_ = {};
}
File::~File() {
  // @@protoc_insertion_point(destructor:chatroom.File)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void File::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void File::Clear() {
// @@protoc_insertion_point(message_clear_start:chatroom.File)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.obj_.Clear();
  _impl_.name_.Clear();
  _impl_.date_.Clear();
  _impl_.len_.Clear();
  _impl_.gid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* File::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 30, 2> File::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(File, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967236,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_File_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 obj = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.obj_)}},
    // repeated string name = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string date = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.date_)}},
    // repeated int64 len = 5;
    {::_pbi::TcParser::FastV64P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.len_)}},
    // optional int32 gid = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(File, _impl_.gid_), 0>(),
     {48, 0, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.gid_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 obj = 1;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.obj_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated string name = 2;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string date = 4;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.date_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated int64 len = 5;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.len_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // optional int32 gid = 6;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.gid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\15\0\4\4\0\0\0\0"
    "chatroom.File"
    "name"
    "date"
  }},
};

::uint8_t* File::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chatroom.File)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 obj = 1;
  {
    int byte_size = _impl_._obj_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_obj(), byte_size, target);
    }
  }

  // repeated string name = 2;
  for (int i = 0, n = this->_internal_name_size(); i < n; ++i) {
    const auto& s = this->_internal_name().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.File.name");
    target = stream->WriteString(2, s, target);
  }

  // repeated string date = 4;
  for (int i = 0, n = this->_internal_date_size(); i < n; ++i) {
    const auto& s = this->_internal_date().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.File.date");
    target = stream->WriteString(4, s, target);
  }

  // repeated int64 len = 5;
  {
    int byte_size = _impl_._len_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          5, _internal_len(), byte_size, target);
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 gid = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_gid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chatroom.File)
  return target;
}

::size_t File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chatroom.File)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 obj = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_obj())
    ;
    _impl_._obj_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string name = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_name().size());
  for (int i = 0, n = _internal_name().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_name().Get(i));
  }
  // repeated string date = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_date().size());
  for (int i = 0, n = _internal_date().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_date().Get(i));
  }
  // repeated int64 len = 5;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_len())
    ;
    _impl_._len_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // optional int32 gid = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_gid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData File::_class_data_ = {
    File::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* File::GetClassData() const {
  return &_class_data_;
}

void File::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<File*>(&to_msg);
  auto& from = static_cast<const File&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chatroom.File)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_obj()->MergeFrom(from._internal_obj());
  _this->_internal_mutable_name()->MergeFrom(from._internal_name());
  _this->_internal_mutable_date()->MergeFrom(from._internal_date());
  _this->_internal_mutable_len()->MergeFrom(from._internal_len());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_gid(from._internal_gid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chatroom.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool File::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* File::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void File::InternalSwap(File* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.obj_.InternalSwap(&other->_impl_.obj_);
  _impl_.name_.InternalSwap(&other->_impl_.name_);
  _impl_.date_.InternalSwap(&other->_impl_.date_);
  _impl_.len_.InternalSwap(&other->_impl_.len_);
        swap(_impl_.gid_, other->_impl_.gid_);
}

::google::protobuf::Metadata File::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_chatroom_2eproto_getter, &descriptor_table_chatroom_2eproto_once,
      file_level_metadata_chatroom_2eproto[1]);
}
// ===================================================================

class Message::_Internal {
 public:
  using HasBits = decltype(std::declval<Message>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Message, _impl_._has_bits_);
  static void set_has_gid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Message::Message(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chatroom.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        obj_{visibility, arena, from.obj_},
        _obj_cached_byte_size_{0},
        context_{visibility, arena, from.context_},
        date_{visibility, arena, from.date_} {}

Message::Message(
    ::google::protobuf::Arena* arena,
    const Message& from)
    : ::google::protobuf::Message(arena) {
  Message* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.gid_ = from._impl_.gid_;

  // @@protoc_insertion_point(copy_constructor:chatroom.Message)
}
inline PROTOBUF_NDEBUG_INLINE Message::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        obj_{visibility, arena},
        _obj_cached_byte_size_{0},
        context_{visibility, arena},
        date_{visibility, arena} {}

inline void Message::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.gid_ = {};
}
Message::~Message() {
  // @@protoc_insertion_point(destructor:chatroom.Message)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Message::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:chatroom.Message)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.obj_.Clear();
  _impl_.context_.Clear();
  _impl_.date_.Clear();
  _impl_.gid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Message::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 36, 2> Message::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Message, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Message_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 gid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Message, _impl_.gid_), 0>(),
     {32, 0, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.gid_)}},
    // repeated int32 obj = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.obj_)}},
    // repeated string context = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.context_)}},
    // repeated string date = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Message, _impl_.date_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 obj = 1;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.obj_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated string context = 2;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.context_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string date = 3;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.date_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional int32 gid = 4;
    {PROTOBUF_FIELD_OFFSET(Message, _impl_.gid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\20\0\7\4\0\0\0\0"
    "chatroom.Message"
    "context"
    "date"
  }},
};

::uint8_t* Message::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chatroom.Message)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 obj = 1;
  {
    int byte_size = _impl_._obj_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_obj(), byte_size, target);
    }
  }

  // repeated string context = 2;
  for (int i = 0, n = this->_internal_context_size(); i < n; ++i) {
    const auto& s = this->_internal_context().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.Message.context");
    target = stream->WriteString(2, s, target);
  }

  // repeated string date = 3;
  for (int i = 0, n = this->_internal_date_size(); i < n; ++i) {
    const auto& s = this->_internal_date().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.Message.date");
    target = stream->WriteString(3, s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 gid = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_gid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chatroom.Message)
  return target;
}

::size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chatroom.Message)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 obj = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_obj())
    ;
    _impl_._obj_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string context = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_context().size());
  for (int i = 0, n = _internal_context().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_context().Get(i));
  }
  // repeated string date = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_date().size());
  for (int i = 0, n = _internal_date().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_date().Get(i));
  }
  // optional int32 gid = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_gid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Message::_class_data_ = {
    Message::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Message::GetClassData() const {
  return &_class_data_;
}

void Message::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Message*>(&to_msg);
  auto& from = static_cast<const Message&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chatroom.Message)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_obj()->MergeFrom(from._internal_obj());
  _this->_internal_mutable_context()->MergeFrom(from._internal_context());
  _this->_internal_mutable_date()->MergeFrom(from._internal_date());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_gid(from._internal_gid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chatroom.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Message::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Message::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Message::InternalSwap(Message* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.obj_.InternalSwap(&other->_impl_.obj_);
  _impl_.context_.InternalSwap(&other->_impl_.context_);
  _impl_.date_.InternalSwap(&other->_impl_.date_);
        swap(_impl_.gid_, other->_impl_.gid_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_chatroom_2eproto_getter, &descriptor_table_chatroom_2eproto_once,
      file_level_metadata_chatroom_2eproto[2]);
}
// ===================================================================

class Signup_info::_Internal {
 public:
  using HasBits = decltype(std::declval<Signup_info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Signup_info, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Signup_info::Signup_info(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chatroom.Signup_info)
}
inline PROTOBUF_NDEBUG_INLINE Signup_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        password_(arena, from.password_) {}

Signup_info::Signup_info(
    ::google::protobuf::Arena* arena,
    const Signup_info& from)
    : ::google::protobuf::Message(arena) {
  Signup_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.uid_ = from._impl_.uid_;

  // @@protoc_insertion_point(copy_constructor:chatroom.Signup_info)
}
inline PROTOBUF_NDEBUG_INLINE Signup_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        password_(arena) {}

inline void Signup_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.uid_ = {};
}
Signup_info::~Signup_info() {
  // @@protoc_insertion_point(destructor:chatroom.Signup_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Signup_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Signup_info::Clear() {
// @@protoc_insertion_point(message_clear_start:chatroom.Signup_info)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.uid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Signup_info::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 41, 2> Signup_info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Signup_info, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Signup_info_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 uid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Signup_info, _impl_.uid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Signup_info, _impl_.uid_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Signup_info, _impl_.name_)}},
    // optional string password = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Signup_info, _impl_.password_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 uid = 1;
    {PROTOBUF_FIELD_OFFSET(Signup_info, _impl_.uid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(Signup_info, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string password = 3;
    {PROTOBUF_FIELD_OFFSET(Signup_info, _impl_.password_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\4\10\0\0\0\0"
    "chatroom.Signup_info"
    "name"
    "password"
  }},
};

::uint8_t* Signup_info::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chatroom.Signup_info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 uid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_uid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.Signup_info.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.Signup_info.password");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chatroom.Signup_info)
  return target;
}

::size_t Signup_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chatroom.Signup_info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string password = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_password());
    }

    // optional int32 uid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_uid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Signup_info::_class_data_ = {
    Signup_info::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Signup_info::GetClassData() const {
  return &_class_data_;
}

void Signup_info::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Signup_info*>(&to_msg);
  auto& from = static_cast<const Signup_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chatroom.Signup_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.uid_ = from._impl_.uid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Signup_info::CopyFrom(const Signup_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chatroom.Signup_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Signup_info::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Signup_info::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Signup_info::InternalSwap(Signup_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
        swap(_impl_.uid_, other->_impl_.uid_);
}

::google::protobuf::Metadata Signup_info::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_chatroom_2eproto_getter, &descriptor_table_chatroom_2eproto_once,
      file_level_metadata_chatroom_2eproto[3]);
}
// ===================================================================

class Login_info::_Internal {
 public:
  using HasBits = decltype(std::declval<Login_info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Login_info, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_password(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Login_info::Login_info(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chatroom.Login_info)
}
inline PROTOBUF_NDEBUG_INLINE Login_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        password_(arena, from.password_) {}

Login_info::Login_info(
    ::google::protobuf::Arena* arena,
    const Login_info& from)
    : ::google::protobuf::Message(arena) {
  Login_info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.uid_ = from._impl_.uid_;

  // @@protoc_insertion_point(copy_constructor:chatroom.Login_info)
}
inline PROTOBUF_NDEBUG_INLINE Login_info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        password_(arena) {}

inline void Login_info::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.uid_ = {};
}
Login_info::~Login_info() {
  // @@protoc_insertion_point(destructor:chatroom.Login_info)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Login_info::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Login_info::Clear() {
// @@protoc_insertion_point(message_clear_start:chatroom.Login_info)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.password_.ClearNonDefaultToEmpty();
  }
  _impl_.uid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Login_info::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2> Login_info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Login_info, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Login_info_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Login_info, _impl_.password_)}},
    // optional int32 uid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Login_info, _impl_.uid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Login_info, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 uid = 1;
    {PROTOBUF_FIELD_OFFSET(Login_info, _impl_.uid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string password = 2;
    {PROTOBUF_FIELD_OFFSET(Login_info, _impl_.password_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\0\10\0\0\0\0\0"
    "chatroom.Login_info"
    "password"
  }},
};

::uint8_t* Login_info::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chatroom.Login_info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_uid(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.Login_info.password");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chatroom.Login_info)
  return target;
}

::size_t Login_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chatroom.Login_info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string password = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_password());
    }

    // optional int32 uid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_uid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Login_info::_class_data_ = {
    Login_info::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Login_info::GetClassData() const {
  return &_class_data_;
}

void Login_info::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Login_info*>(&to_msg);
  auto& from = static_cast<const Login_info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chatroom.Login_info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_password(from._internal_password());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.uid_ = from._impl_.uid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Login_info::CopyFrom(const Login_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chatroom.Login_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Login_info::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Login_info::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Login_info::InternalSwap(Login_info* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
        swap(_impl_.uid_, other->_impl_.uid_);
}

::google::protobuf::Metadata Login_info::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_chatroom_2eproto_getter, &descriptor_table_chatroom_2eproto_once,
      file_level_metadata_chatroom_2eproto[4]);
}
// ===================================================================

class Group_uid::_Internal {
 public:
  using HasBits = decltype(std::declval<Group_uid>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Group_uid, _impl_._has_bits_);
  static void set_has_uid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Group_uid::Group_uid(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chatroom.Group_uid)
}
inline PROTOBUF_NDEBUG_INLINE Group_uid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

Group_uid::Group_uid(
    ::google::protobuf::Arena* arena,
    const Group_uid& from)
    : ::google::protobuf::Message(arena) {
  Group_uid* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.uid_ = from._impl_.uid_;

  // @@protoc_insertion_point(copy_constructor:chatroom.Group_uid)
}
inline PROTOBUF_NDEBUG_INLINE Group_uid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void Group_uid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.uid_ = {};
}
Group_uid::~Group_uid() {
  // @@protoc_insertion_point(destructor:chatroom.Group_uid)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Group_uid::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Group_uid::Clear() {
// @@protoc_insertion_point(message_clear_start:chatroom.Group_uid)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.uid_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Group_uid::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 31, 2> Group_uid::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Group_uid, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Group_uid_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Group_uid, _impl_.name_)}},
    // optional int32 uid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Group_uid, _impl_.uid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Group_uid, _impl_.uid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 uid = 1;
    {PROTOBUF_FIELD_OFFSET(Group_uid, _impl_.uid_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(Group_uid, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\4\0\0\0\0\0"
    "chatroom.Group_uid"
    "name"
  }},
};

::uint8_t* Group_uid::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chatroom.Group_uid)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 uid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_uid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.Group_uid.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chatroom.Group_uid)
  return target;
}

::size_t Group_uid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chatroom.Group_uid)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional int32 uid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_uid());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Group_uid::_class_data_ = {
    Group_uid::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Group_uid::GetClassData() const {
  return &_class_data_;
}

void Group_uid::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Group_uid*>(&to_msg);
  auto& from = static_cast<const Group_uid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chatroom.Group_uid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.uid_ = from._impl_.uid_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Group_uid::CopyFrom(const Group_uid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chatroom.Group_uid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Group_uid::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Group_uid::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Group_uid::InternalSwap(Group_uid* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.uid_, other->_impl_.uid_);
}

::google::protobuf::Metadata Group_uid::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_chatroom_2eproto_getter, &descriptor_table_chatroom_2eproto_once,
      file_level_metadata_chatroom_2eproto[5]);
}
// ===================================================================

class IDs::_Internal {
 public:
};

IDs::IDs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chatroom.IDs)
}
inline PROTOBUF_NDEBUG_INLINE IDs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_{visibility, arena, from.id_},
        _id_cached_byte_size_{0},
        _cached_size_{0} {}

IDs::IDs(
    ::google::protobuf::Arena* arena,
    const IDs& from)
    : ::google::protobuf::Message(arena) {
  IDs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chatroom.IDs)
}
inline PROTOBUF_NDEBUG_INLINE IDs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_{visibility, arena},
        _id_cached_byte_size_{0},
        _cached_size_{0} {}

inline void IDs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
IDs::~IDs() {
  // @@protoc_insertion_point(destructor:chatroom.IDs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IDs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void IDs::Clear() {
// @@protoc_insertion_point(message_clear_start:chatroom.IDs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IDs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> IDs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IDs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 id = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IDs, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(IDs, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* IDs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chatroom.IDs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 id = 1;
  {
    int byte_size = _impl_._id_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_id(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chatroom.IDs)
  return target;
}

::size_t IDs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chatroom.IDs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 id = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_id())
    ;
    _impl_._id_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IDs::_class_data_ = {
    IDs::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* IDs::GetClassData() const {
  return &_class_data_;
}

void IDs::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IDs*>(&to_msg);
  auto& from = static_cast<const IDs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chatroom.IDs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_id()->MergeFrom(from._internal_id());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IDs::CopyFrom(const IDs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chatroom.IDs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IDs::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* IDs::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void IDs::InternalSwap(IDs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.id_.InternalSwap(&other->_impl_.id_);
}

::google::protobuf::Metadata IDs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_chatroom_2eproto_getter, &descriptor_table_chatroom_2eproto_once,
      file_level_metadata_chatroom_2eproto[6]);
}
// ===================================================================

class Strs::_Internal {
 public:
};

Strs::Strs(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:chatroom.Strs)
}
inline PROTOBUF_NDEBUG_INLINE Strs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : str_{visibility, arena, from.str_},
        _cached_size_{0} {}

Strs::Strs(
    ::google::protobuf::Arena* arena,
    const Strs& from)
    : ::google::protobuf::Message(arena) {
  Strs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:chatroom.Strs)
}
inline PROTOBUF_NDEBUG_INLINE Strs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : str_{visibility, arena},
        _cached_size_{0} {}

inline void Strs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Strs::~Strs() {
  // @@protoc_insertion_point(destructor:chatroom.Strs)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Strs::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Strs::Clear() {
// @@protoc_insertion_point(message_clear_start:chatroom.Strs)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.str_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Strs::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 25, 2> Strs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Strs_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string str = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Strs, _impl_.str_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string str = 1;
    {PROTOBUF_FIELD_OFFSET(Strs, _impl_.str_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\15\3\0\0\0\0\0\0"
    "chatroom.Strs"
    "str"
  }},
};

::uint8_t* Strs::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:chatroom.Strs)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string str = 1;
  for (int i = 0, n = this->_internal_str_size(); i < n; ++i) {
    const auto& s = this->_internal_str().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "chatroom.Strs.str");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:chatroom.Strs)
  return target;
}

::size_t Strs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:chatroom.Strs)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string str = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_str().size());
  for (int i = 0, n = _internal_str().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_str().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Strs::_class_data_ = {
    Strs::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Strs::GetClassData() const {
  return &_class_data_;
}

void Strs::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Strs*>(&to_msg);
  auto& from = static_cast<const Strs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:chatroom.Strs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_str()->MergeFrom(from._internal_str());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Strs::CopyFrom(const Strs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:chatroom.Strs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Strs::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Strs::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Strs::InternalSwap(Strs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.str_.InternalSwap(&other->_impl_.str_);
}

::google::protobuf::Metadata Strs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_chatroom_2eproto_getter, &descriptor_table_chatroom_2eproto_once,
      file_level_metadata_chatroom_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace chatroom
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
